{"version":3,"file":"static/js/563.c2c320d6.chunk.js","mappings":"mPAEaA,EAAWC,EAAAA,GAAAA,IAAH,gQAYRC,EAAcD,EAAAA,GAAAA,IAAH,kjB,SCVlBE,EAAYC,SAASC,cAAc,eA6BzC,EA3Bc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UACxBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACH,WAAbA,EAAIC,MACNL,GAEH,EAED,OADAM,OAAOC,iBAAiB,UAAWJ,GAC5B,WACLG,OAAOE,oBAAoB,UAAWL,EACvC,CACF,GAAE,CAACH,IAQJ,OAAOS,EAAAA,EAAAA,eACL,SAACf,EAAD,CAAUgB,QAPgB,SAAAN,GACtBA,EAAIO,gBAAkBP,EAAIQ,QAC5BZ,GAEH,EAGC,UACE,SAACJ,EAAD,UAAcK,MAEhBJ,EAEH,E,8BC7BYgB,EAAiBlB,EAAAA,GAAAA,IAAH,qmBAyBdmB,EAAUnB,EAAAA,GAAAA,IAAH,wDAKPoB,EAASpB,EAAAA,GAAAA,GAAH,6J,wCCdJ,SAASqB,IACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAc,WAClBD,GAAcD,EACf,EAEKG,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAM1B,OAJAzB,EAAAA,EAAAA,YAAU,WACRmB,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACP,KAGF,iCACE,UAACN,EAAD,YACE,SAAC,cAAD,CACEc,MAAO,CACLC,KAAM,OACNC,MAAO,CAAEC,aAAc,QAASC,YAAa,SAHjD,UAME,SAAC,MAAD,MAPJ,gBAWA,UAACnB,EAAD,YACE,UAACD,EAAD,YACE,SAAC,KAAD,CAAeK,UAAWE,KAC1B,sCACA,SAAC,KAAD,IACCG,IAAcG,IAAS,mDACxB,SAAC,KAAD,QAGF,SAAC,KAAD,KACA,SAAC,KAAD,OAEDR,IACC,UAAC,EAAD,CAAOlB,QAASoB,EAAhB,WACE,SAAC,KAAD,CAAec,WAAYd,KAC3B,SAAC,KAAD,CAAUc,WAAYd,SAK/B,C","sources":["components/Modal/Modal.style.js","components/Modal/Modal.jsx","pages/Contacts/Contacts.style.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(9, 9, 9, 0.51);\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5.5px);\n  -webkit-backdrop-filter: blur(5.5px);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: fit-content;\n  height: fit-content;\n  padding: 20px;\n  border-radius: 5px;\n  background: rgb(0, 0, 0);\n  background: -moz-linear-gradient(\n    320deg,\n    rgba(0, 0, 0, 1) 0%,\n    rgba(0, 18, 246, 1) 100%\n  );\n  background: -webkit-linear-gradient(\n    320deg,\n    rgba(0, 0, 0, 1) 0%,\n    rgba(0, 18, 246, 1) 100%\n  );\n  background: linear-gradient(\n    320deg,\n    rgba(0, 0, 0, 1) 0%,\n    rgba(0, 18, 246, 1) 100%\n  );\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, ModalWindow } from './Modal.style';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = evt => {\n      if (evt.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ContactWrapper = styled.div`\n  padding: 20px 10px;\n  width: 45%;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 76vh;\n  margin-top: -35px;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 16px;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n\n  h2 {\n    font-size: 30px;\n    font-weight: 700;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Header = styled.h1`\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 60px;\n  margin-bottom: 55px;\n  margin-top: 75px;\n`;\n","import Modal from 'components/Modal/Modal';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactWrapper, Header, Wrapper } from './Contacts.style';\nimport { Outlet } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\nimport { FcAddressBook } from 'react-icons/fc';\nimport {\n  BookForm,\n  NewContactBtn,\n  CloseModalBtn,\n  Filter,\n  ContactList,\n  Developer,\n} from 'components';\n\nexport default function Contacts() {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Header>\n        <IconContext.Provider\n          value={{\n            size: '70px',\n            style: { marginBottom: '-10px', marginRight: '10px' },\n          }}\n        >\n          <FcAddressBook />\n        </IconContext.Provider>\n        Phonebook\n      </Header>\n      <Wrapper>\n        <ContactWrapper>\n          <NewContactBtn showModal={toggleModal} />\n          <h2>Contacts</h2>\n          <Filter />\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactList />\n        </ContactWrapper>\n\n        <Outlet />\n        <Developer />\n      </Wrapper>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <CloseModalBtn closeModal={toggleModal} />\n          <BookForm closeModal={toggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":["Backdrop","styled","ModalWindow","modalRoot","document","querySelector","onClose","children","useEffect","handleKeyDown","evt","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","ContactWrapper","Wrapper","Header","Contacts","useState","showModal","setShowModal","toggleModal","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","error","selectError","fetchContacts","value","size","style","marginBottom","marginRight","closeModal"],"sourceRoot":""}